# @generated AUTOGENERATED file. Do not Change!
# flake8: noqa
# fmt: off
# isort: skip_file

import typing
from gql import gql, Client
import datetime


GetCustomScalarResponse = typing.TypedDict("GetCustomScalarResponse", {"today": datetime.date})


_GetCustomScalarInput__required = typing.TypedDict("_GetCustomScalarInput__required", {})
_GetCustomScalarInput__not_required = typing.TypedDict("_GetCustomScalarInput__not_required", {}, total=False)


class _GetCustomScalarInput(_GetCustomScalarInput__required, _GetCustomScalarInput__not_required):
    pass


class GetCustomScalar:
    Response = GetCustomScalarResponse
    Input = _GetCustomScalarInput
    _query = gql('''
        query GetCustomScalar {
          today
        }
    ''')
    @classmethod
    def execute(cls, client: Client, variable_values: _GetCustomScalarInput = {}) -> GetCustomScalarResponse:
        return client.execute(  # type: ignore
            cls._query, variable_values=variable_values
        )
    @classmethod
    def execute_async(cls, client: Client, variable_values: _GetCustomScalarInput = {}) -> typing.Awaitable[GetCustomScalarResponse]:
        return client.execute_async(  # type: ignore
            cls._query, variable_values=variable_values
        )
