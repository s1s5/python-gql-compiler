# @generated AUTOGENERATED file. Do not Change!
# flake8: noqa
# fmt: off
# isort: skip_file

import typing
from gql import gql, Client
Episode = typing.Literal["NEWHOPE", "EMPIRE", "JEDI"]


GetInlineFragment__hero__Droid = typing.TypedDict("GetInlineFragment__hero__Droid", {"__typename": typing.Literal["Droid"], "id": str, "name": str, "primaryFunction": str})


GetInlineFragment__hero__Human = typing.TypedDict("GetInlineFragment__hero__Human", {"__typename": typing.Literal["Human"], "id": str, "name": str, "totalCredits": int})


__GetInlineFragment__hero = typing.TypedDict("__GetInlineFragment__hero", {"__typename": typing.Literal["Character"], "id": str, "name": str})
GetInlineFragment__hero = typing.Union[__GetInlineFragment__hero, GetInlineFragment__hero__Human, GetInlineFragment__hero__Droid]


GetInlineFragmentResponse = typing.TypedDict("GetInlineFragmentResponse", {"hero": GetInlineFragment__hero})


_GetInlineFragmentInput__required = typing.TypedDict("_GetInlineFragmentInput__required", {"e": Episode})
_GetInlineFragmentInput__not_required = typing.TypedDict("_GetInlineFragmentInput__not_required", {}, total=False)


class _GetInlineFragmentInput(_GetInlineFragmentInput__required, _GetInlineFragmentInput__not_required):
    pass


class GetInlineFragment:
    Response = GetInlineFragmentResponse
    Input = _GetInlineFragmentInput
    _query = gql('''
        query GetInlineFragment($e: Episode!) {
          hero(episode: $e) {
            __typename id name
            ... on Human { totalCredits }
            ... on Droid { primaryFunction }
          }
        }
    ''')
    @classmethod
    def execute(cls, client: Client, variable_values: _GetInlineFragmentInput) -> GetInlineFragmentResponse:
        return client.execute(  # type: ignore
            cls._query, variable_values=variable_values
        )
    @classmethod
    def execute_async(cls, client: Client, variable_values: _GetInlineFragmentInput) -> typing.Awaitable[GetInlineFragmentResponse]:
        return client.execute_async(  # type: ignore
            cls._query, variable_values=variable_values
        )
